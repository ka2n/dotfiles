{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  "Print to console": {
    "prefix": "log",
    "body": ["console.log('$1');", "$2"],
    "description": "Log output to console"
  },
  "Styled JSX": {
    "prefix": "stylejsx",
    "body": "<style jsx>{`\n\t$1\n`}</style>",
    "description": "Styled JSX"
  },
  "Import react": {
    "prefix": "ireact",
    "body": "import React from 'react'\n\n"
  },
  "Import moment": {
    "prefix": "imoment",
    "body": "import moment from 'moment'\n\n"
  },
  "Import classnames": {
    "prefix": "icn",
    "body": "import cn from 'classnames'\n\n"
  },
  "Component": {
    "prefix": "scomponent",
    "body": [
      "import React from \"react\";",
      "",
      "export type I${1:$TM_FILENAME_BASE}Props = {",
      "  presenter?: I$1Presenter;",
      "$2",
      "};",
      "",
      "export type I$1 = React.FC<I$1Props>;",
      "",
      "export const $1: I$1 = ({",
      "  presenter: Presenter = $1Presenter,",
      "  ...props",
      "}) => {",
      "$0",
      "  return <Presenter />;",
      "};",
      "",
      "export type I$1PresenterProp = {",
      "$3",
      "};",
      "",
      "export type I$1Presenter = React.FC<I$1PresenterProp>;",
      "",
      "export const $1Presenter: I$1Presenter = props => (",
      "<>",
      "$4",
      "</>",
      ")"
    ]
  }
  //  "React component": {
  //    "prefix": "component",
  //    "body": [
  //      "interface Props {",
  //      "}",
  //      "",
  //      "const $1View = (props: Props) => (",
  //      "<>",
  //      "$0",
  //      "</>",
  //      ")",
  //      "",
  //      "export const $1 = compose(",
  //      ")($1View)"
  //    ]
  //  },
  //  "Nextjs page": {
  //    "prefix": "page",
  //    "body": [
  //      "const $1Page: React.FP<{",
  //      "  $2",
  //      "}> = (props) => {",
  //      "",
  //      "return (",
  //      "<>",
  //      "$0",
  //      "</>",
  //      ")",
  //      "}",
  //      "",
  //      "export default $1Page"
  //    ]
  //  },
  //  "ReactFragment": {
  //    "prefix": "rf",
  //    "body": "<>$0</>"
  //  }
}
