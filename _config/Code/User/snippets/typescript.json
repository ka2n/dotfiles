{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Redux reducer func": {
    "prefix": "sreducer",
    "body": ["${1:funcname}(state, action: PayloadAction<{$2}>) {", "$0", "}"]
  },
  "Redux async reducer func": {
    "prefix": "sfunction",
    "body": [
      "export const ${1:funcname} = ($2) => async (dispatch: Dispatch) =>  {",
      "$0",
      "}"
    ]
  },
  "Redux createSlice": {
    "prefix": "sslice",
    "body": [
      "import { createSlice, PayloadAction } from \"redux-starter-kit\";",
      "import { Dispatch } from \"redux\";",
      "",
      "type I${1:${TM_FILENAME_BASE/(.*)Slice/${1:/capitalize}/}}Store = {",
      "$3",
      "};",
      "",
      "const initialState: I$1Store = {",
      "$4",
      "};",
      "",
      "const ${2:${TM_FILENAME_BASE}} = createSlice({",
      "  initialState,",
      "  reducers: {",
      "$0",
      "  }",
      "});",
      "",
      "// export const {} = $2.actions",
      "export default $2.reducer;"
    ]
  }
}
